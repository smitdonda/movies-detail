{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\React\\\\SB Admin Fetch\\\\src\\\\components\\\\EditStudent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditStudent() {\n  _s();\n\n  let params = useParams();\n  let navigate = useNavigate();\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [mobile, setMobile] = useState(\"\");\n  let [cls, setCls] = useState(\"\");\n  let url = \"https://61ee2173d593d20017dbac6e.mockapi.io/students\";\n  useEffect(() => {\n    if (params.id < context.students.length) {\n      getData();\n    } else {\n      alert(\"Selected Students is Not available\");\n    }\n  }, []);\n\n  let getData = async () => {\n    await fetch(url + params.id).then(response => res);\n  };\n\n  let handleSubmit = () => {\n    let newData = {\n      name,\n      email,\n      mobile,\n      \"class\": cls\n    };\n    let newArray = [...context.students];\n    newArray.splice(params.id, 1, newData);\n    context.setStudents(newArray);\n    navigate(\"/all-students\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: name,\n        type: \"text\",\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: email,\n        type: \"email\",\n        placeholder: \"Enter email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"We'll never share your email with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Mobile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: mobile,\n        type: \"text\",\n        placeholder: \"Mobile\",\n        onChange: e => setMobile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: cls,\n        type: \"text\",\n        placeholder: \"Class\",\n        onChange: e => setCls(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleSubmit,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditStudent, \"89hGk6nekJAOH4sWViqNXVcGaVc=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = EditStudent;\nexport default EditStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditStudent\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/React/SB Admin Fetch/src/components/EditStudent.js"],"names":["React","useState","useEffect","useContext","Form","Button","useParams","useNavigate","EditStudent","params","navigate","name","setName","email","setEmail","mobile","setMobile","cls","setCls","url","id","context","students","length","getData","alert","fetch","then","response","res","handleSubmit","newData","newArray","splice","setStudents","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,SAAR,EAAkBC,WAAlB,QAAoC,kBAApC;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AAKnB,MAAIC,MAAM,GAAGH,SAAS,EAAtB;AACA,MAAII,QAAQ,GAAGH,WAAW,EAA1B;AACA,MAAI,CAACI,IAAD,EAAMC,OAAN,IAAeX,QAAQ,CAAC,EAAD,CAA3B;AACA,MAAI,CAACY,KAAD,EAAOC,QAAP,IAAiBb,QAAQ,CAAC,EAAD,CAA7B;AACA,MAAI,CAACc,MAAD,EAAQC,SAAR,IAAmBf,QAAQ,CAAC,EAAD,CAA/B;AACA,MAAI,CAACgB,GAAD,EAAKC,MAAL,IAAajB,QAAQ,CAAC,EAAD,CAAzB;AACA,MAAIkB,GAAG,GAAG,sDAAV;AAGAjB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGO,MAAM,CAACW,EAAP,GAAUC,OAAO,CAACC,QAAR,CAAiBC,MAA9B,EACA;AACIC,MAAAA,OAAO;AACV,KAHD,MAKA;AACIC,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;AACJ,GATQ,EASP,EATO,CAAT;;AAWA,MAAID,OAAO,GAAE,YAAS;AAClB,UAAME,KAAK,CAACP,GAAG,GAACV,MAAM,CAACW,EAAZ,CAAL,CACLO,IADK,CACAC,QAAQ,IAAEC,GADV,CAAN;AAGH,GAJD;;AAMA,MAAIC,YAAY,GAAG,MAAI;AACnB,QAAIC,OAAO,GAAG;AAACpB,MAAAA,IAAD;AAAME,MAAAA,KAAN;AAAYE,MAAAA,MAAZ;AAAmB,eAAQE;AAA3B,KAAd;AACA,QAAIe,QAAQ,GAAG,CAAC,GAAGX,OAAO,CAACC,QAAZ,CAAf;AACAU,IAAAA,QAAQ,CAACC,MAAT,CAAgBxB,MAAM,CAACW,EAAvB,EAA0B,CAA1B,EAA4BW,OAA5B;AACAV,IAAAA,OAAO,CAACa,WAAR,CAAoBF,QAApB;AACAtB,IAAAA,QAAQ,CAAC,eAAD,CAAR;AAEH,GAPD;;AAUA,sBACI,QAAC,IAAD;AAAA,4BAEI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAEC,IAArB;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,WAAW,EAAC,MAAnD;AAA0D,QAAA,QAAQ,EAAGwB,CAAD,IAAKvB,OAAO,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAhF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAExB,KAArB;AAA4B,QAAA,IAAI,EAAC,OAAjC;AAAyC,QAAA,WAAW,EAAC,aAArD;AAAmE,QAAA,QAAQ,EAAGsB,CAAD,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAeI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAEtB,MAArB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,WAAW,EAAC,QAArD;AAA8D,QAAA,QAAQ,EAAGoB,CAAD,IAAKnB,SAAS,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAoBI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAEpB,GAArB;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,WAAW,EAAC,OAAlD;AAA0D,QAAA,QAAQ,EAAGkB,CAAD,IAAKjB,MAAM,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA/E;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAyBI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEP,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GAxEQtB,W;UAKQF,S,EACEC,W;;;KANVC,W;AA0ET,eAAeA,WAAf","sourcesContent":["import React,{useState,useEffect,useContext} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {useParams,useNavigate} from 'react-router-dom';\r\n\r\n\r\nfunction EditStudent() {\r\n \r\n\r\n\r\n\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n    let [name,setName]=useState(\"\");\r\n    let [email,setEmail]=useState(\"\");\r\n    let [mobile,setMobile]=useState(\"\");\r\n    let [cls,setCls]=useState(\"\");\r\n    let url = \"https://61ee2173d593d20017dbac6e.mockapi.io/students\"\r\n\r\n\r\n    useEffect(()=>{\r\n        if(params.id<context.students.length)\r\n        {\r\n            getData();\r\n        }\r\n        else\r\n        {\r\n            alert(\"Selected Students is Not available\") \r\n        }\r\n    },[])\r\n\r\n    let getData =async()=>{\r\n        await fetch(url+params.id)\r\n        .then(response=>res)\r\n      \r\n    }\r\n\r\n    let handleSubmit = ()=>{\r\n        let newData = {name,email,mobile,\"class\":cls};\r\n        let newArray = [...context.students];\r\n        newArray.splice(params.id,1,newData)\r\n        context.setStudents(newArray)\r\n        navigate(\"/all-students\")\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Form>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control value={name} type=\"text\" placeholder=\"Name\" onChange={(e)=>setName(e.target.value)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control value={email} type=\"email\" placeholder=\"Enter email\" onChange={(e)=>setEmail(e.target.value)}/>\r\n                <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" >\r\n                <Form.Label>Mobile</Form.Label>\r\n                <Form.Control value={mobile} type=\"text\" placeholder=\"Mobile\" onChange={(e)=>setMobile(e.target.value)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>Class</Form.Label>\r\n                <Form.Control value={cls} type=\"text\" placeholder=\"Class\" onChange={(e)=>setCls(e.target.value)}/>\r\n            </Form.Group>\r\n  \r\n            <Button variant=\"primary\" onClick={handleSubmit}>\r\n                Update\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default EditStudent"]},"metadata":{},"sourceType":"module"}